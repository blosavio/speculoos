[{:date {:year 2024
         :month "June"
         :date 6}
  :responsible {:name "Brad Losavio"
                :email "blosavio@sagevisuals.com"}
  :version 0
  :comment "initial public release"
  :status :active
  :stable false
  :urgency :none
  :maturity :experimental
  :breaking? nil
  :changes {:change-type :initial-release}}

 {:date {:year 2024
         :month "July"
         :date 26}
  :responsible {:name "Brad Losavio"
                :email "blosavio@sagevisuals.com"}
  :version 1
  :comment "request for comments"
  :status :active
  :stable false
  :urgency :low
  :maturity :experimental
  :breaking? true
  :changes
  [{:description "Re-named functions for clarity, correctness, and conciseness.
`validate-scalar-spec` to `validate-scalars`
`validate-collection-spec` to `validate-collections`
`valid-scalar-spec?` to `valid-scalars?`
`valid-collection-spec?` to `valid-collections?`
`valid-macro-spec?` to `valid-macro?`

Also updated documentation to correspond to new function names."
    :date {:year 2024
           :month "July"
           :date 10}
    :change-type :name-change
    :breaking? true}

   {:description "Upgraded `defpred` predicate definition macro that can inspect
 a function S-expression and create a random sample generator. Also added
 documentation and illustrations."
    :date {:year 2024
           :month "July"
           :date 18}
    :change-type :increased-capabilities
    :breaking? false}

   {:description "Added `thoroughly-valid?` utility function."
    :date {:year 2024
           :month "July"
           :date 19}
    :change-type :increased-capabilities
    :breaking? false}

   {:description "Improved `data-without-specs`, `specs-without-data`,
 `data-with-specs` to properly handle scalars within a set."
    :date {:year 2024
           :month "July"
           :date 21}
    :change-type :bug-fix
    :breaking? false}

   {:description "Re-naming functions to more accurately convey purpose and action.
`data-without-specs` to `scalars-without-predicates`
`data-with-specs` to `scalars-with-predicates`
`collections-without-specs` to `collections-without-predicates`"
    :date {:year 2024
           :month "July"
           :date 21}
    :change-type :name-change
    :breaking? true}

   {:description "Removed un-needed/redundant api.clj and api.html pages because
they're automatically generated by Codox."
    :date {:year 2024
           :month "July"
           :date 23}
    :change-type :documentation
    :breaking? false}

   {:description "Added a `*max-tries*` dynamic var that governs random sample
 generators."
    :date {:year 2024
           :month "July"
           :date 23}
    :change-type :implementation-change
    :breaking? false}

   {:description "Added tests to verify handling of sequences emitted by
`interpose`, `interleave`, `lazy-cat`, `mapcat`, and `zipmap`."
    :date {:year 2024
           :month "July"
           :date 25}
    :change-type :tests
    :breaking? false}

   {:description "Added `lazy-seq?` utility predicate."
    :date {:year 2024
           :month "July"
           :date 25}
    :change-type :increased-capabilities
    :breaking? false}

   {:description "Various documentation edits spanning 2024July10 through 2024July26."
    :date {:year 2024
           :month "July"
           :date 26}
    :change-type :documentation
    :breaking? false}]}

 {:date {:year 2024
         :month nil
         :date nil}
  :responsible {:name "Brad Losavio"
                :email "blosavio@sagevisuals.com"}
  :version 2
  :comment "work on addressing comments"
  :status :active
  :stable false
  :urgency :low
  :maturity :experimental
  :breaking? true
  :changes
  [{:description "Added `thoroughly-valid-scalars` and `thoroughly-valid-collections?` utilities."
    :date {:year 2024
           :month "August"
           :date 1}
    :change-type :added-function
    :breaking? false}
   {:description "Adjusted `thoroughly-valid?` to internally use new functions."
    :date {:year 2024
           :month "August"
           :date 1}
    :change-type :implementation-change
    :breaking? false}
   {:description "Adjusted `scalars-without-predicates` to return a set of all-paths elements, instead of a sequence, to be consistent with `collections-without-predicates`."
    :date {:year 2024
           :month "August"
           :date 1}
    :change-type :return-change
    :breaking? true}
   {:description "Removed hard-coded collection hierarchy derivation and replaced with a `load` from a single file."
    :date {:year 2024
           :month "August"
           :date 1}
    :change-type :implementation-change
    :breaking? false}
   {:description "Re-named functions in collection-functions namespace from `blah-2` to `blah` to emphasize they're not merely a new version, but that they operate on *any* Clojure collection type, and to be consisten with fn-in namespace members."
    :date {:year 2024
           :month "August"
           :date 3}
    :change-type :name-change
    :breaking? true}
   {:description "Expanded docstrings and examples to provide clarity, completeness, and better convey how functions behave and what they're intended for, especially for a user who looks at the API doc before html documentation."
    :date {:year 2024
           :month "August"
           :date 3}
    :change-type :documentation
    :breaking? false}
   {:description "Internalized `reduce-indexed` into 'core' namespace, plus unit tests into core-tests. Removed 'collection-functions' namespace because Speculoos does not use `map*`, `map-indexed*`, nor `reduce*`."
    :date {:year 2024
           :month "August"
           :date 5}
    :change-type :implementation-change
    :breaking? false}
   {:description "Removed Speculoos project's internal 'fn-in' namespace to an external lib. 'fn-in' is a new dependency."
    :date {:year 2024
           :month "August"
           :date 8}
    :change-type :added-dependency
    :breaking? true}
   {:description "Removed Speculoos project's own version of the derived collection hierarchy; now refers to the one provided by the 'fn-in' dep."
    :date {:year 2024
           :month "August"
           :date 8}
    :change-type :implementation-change
    :breaking? false}
   {:description "Moved `recover-literal-path` and helper functions from utility namespace to core namespace; moved attendant tests from utility-tests to core-tests. In preparation for adding feature to `validate-collections`."
    :date {:year 2024
           :month "August"
           :date 11}
    :change-type :moved-fn
    :breaking? true}

   {:description "Upgraded `validate-collections` report so that entries now indicate the literal path to the collection datum, at keyword `:path-datum`."
    :date {:year 2024
           :month "August"
           :date 11}
    :change-type :improved-output
    :breaking? false}

   {:description "Upgraded `validate-scalars` to accept 'bare' scalar and 'bare' predicate. This is intentionally undocumented behavior, but provided for convenience and least surprise."
    :date {:year 2024
           :month "August"
           :date 13}
    :reference {:source "GitHub Issue #2"
                :url "https://github.com/blosavio/speculoos/issues/2"}
    :change-type #{:implementation-change :relaxed-requirements}
    :breaking? false}

   {:description "Fixed incorrect `:path` reporting in `validate-set-elements`."
    :date {:year 2024
           :month "August"
           :date 13}
    :reference {:source "GitHub Issue #1"
                :url "https://github.com/blosavio/speculoos/issues/1"}
    :change-type :bug-fix
    :breaking? false}

   {:description "Changed validation report key returned `validate-set-elements` from `:datum` to `:datums-set` to emphasize that *every* datum in the set is validated."
    :date {:year 2024
           :month "August"
           :date 13}
    :reference {:source "GitHub Issue #1"
                :url "https://github.com/blosavio/speculoos/issues/1"}
    :change-type :return-change
    :breaking? true}

   {:description "Fixed bug in `validate-collections` that validated un-paired collection predicates against `nil`."
    :date {:year 2024
           :month "August"
           :date 14}
    :reference {:source "GitHub Issue #3"
                :url "https://github.com/blosavio/speculoos/issues/3"}
    :change-type :bug-fix
    :breaking? false}

   {:description "Added `predicates-without-collections` to complete feature matrix."
    :date {:year 2024
           :month "August"
           :date 20}
    :change-type #{:added-fn}
    :breaking? false}
   
   {:description "Removed un-serious utility functions of dubious usefulness."
    :date {:year 2024
           :month "August"
           :date 22}
    :change-type :removed-fn
    :breaking? true
    :removed-functions ['bazooka-swatting-files
                        'bed-of-procrustes
                        'nil-out
                        'smash-data]}

   {:description "Fixed ignored return collection validations in `valdiate-fn-with`."
    :date {:year 2024
           :month "August"
           :date 26}
    :reference {:source "GitHub Issue #4"
                :url "https://github.com/blosavio/speculoos/issues/4"}
    :altered-fns ['validate-fn-with 'validate-fn-meta-spec 'instrument]
    :change-type :bug-fix
    :breaking? false}

   {:description "Adjusted `validate-fn-with` to take advantage of `validate-scalars` upgraded ability to validate bare scalars with bare predicates."
    :date {:year 2024
           :month "August"
           :date 26}
    :altered-fns ['validate-fn-with]
    :change-type :implementation-change
    :breaking? false}

   {:description "Added a completely new argument/return relationship validation to `validate-fn-with` that is much cleaner. Old, complex way remains."
    :date {:year 2024
           :month "August"
           :date 28}
    :altered-fns ['validate-fn-with]
    :change-type :added-capability
    :breaking? false}

   {:description "Removed function arg-vs-ret scalar/collection validation feature from `validate-fn-with`. It was too complex, and difficult to use."
    :date {:year 2024
           :month "August"
           :date 28}
    :altered-fns ['validate-fn-with 'validate-fn-meta-spec 'instrument]
    :change-type :removed-capability
    :breaking? true}

   ]}]


(comment Release notes                  ; changelog.edn
         "A human- and machine-readable `changelog.edn` will accompany each Speculoos
  release at the project's root directory. `changelog.edn` is tail-appended file
  constructed from all previous releases, possibly automatically-composed of
  per-release release-log.edn files in a sub-directory.

  Each release is a  map describing each change. Each change map has the
  following keys with appropriate associated values:

  :date {:year :month :date :index <optional, if more than one per day>}
  :responsible {:name :email}
  :contributors [{:name :email} ...] <included as needed>

  :change
    :initial-release
    :security

    :performance-improvement
    :preformance-regression
    :memory-improvement
    :memory-regression
    :network-resource-improvement
    :network-resource-regression

    :api-change

    :relaxed-requirements
    :increased-requirements

    :documentation

    :tests
    :bug-fix
    :deprecated-something

    :name-change
    :function-argument-signature-change
    :removed-fn

    :policy-change (i.e., considered good-form to...)
    :meta-data

    :error-messsage-improved/changed
    :default-changed
    :improved-output (e.g., handles more unicode; processes more numeric types)

    :website-change
    :documentation-change

    :implementation-change
    :source-formatting-change (i.e., indentation, spacing, capitalization, parentheses location)

    :release-note-change (omissions, corrections)


  :comment a string for whatever seems useful <optional>

  :maturity
    :proof-of-concept
    :experimental
    :pre-alpha
    :alpha
    :beta
    :release

  :urgency
    :none
    :low
    :high

  :status
    :active
    :stable
    :inactive
    :experimental
    :deprecated
    :mature

:breaking?
  :nil if initial public release
  false if and only if all changes are non-breaking
  true otherwise" )